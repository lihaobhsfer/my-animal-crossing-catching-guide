{"version":3,"sources":["data/data.csv","components/CustomCard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CustomCard","url","Name","Price","Location","Size","Time","MonthsInWord","goneNextMonth","newThisMonth","availableNow","SwimmingPattern","ShadowSize","style","background","margin","borderRadius","display","src","alt","className","span","AlertTwoTone","twoToneColor","EnvironmentTwoTone","CalendarTwoTone","ClockCircleTwoTone","DollarCircleTwoTone","SlidersTwoTone","PlayCircleTwoTone","WarningTwoTone","App","state","hemisphere","columns","type","data","dataAggregated","viewMode","sortByPrice","filterGoneNextMonth","filterNewThisMonth","showThisMonth","showAll","filterData","df","filter","i","month","Date","getMonth","indexOf","names","filteredData","map","push","console","log","length","setState","sortData","sort","a","b","parseInt","replace","localeCompare","dfAvailable","dfNotAvailable","dfMap","Object","entries","key","val","sortedData","onSortButtonClicked","sortType","onMonthChange","e","target","value","onHemisphereChange","onTypeChange","onFilterGoneNextMonthButtonClicked","filterStuff","onFilterGNewThisMonthButtonClicked","onShowThisMonthClicked","d3","fishData","newArr","split","nextMonth","prevMonth","arr","res","tmpArr","last","pop","unshift","reverse","ret","months","translateMonth","timeInWords","currentHour","getHours","toLowerCase","match","numbers","j","checkAvailableNow","then","row","title","dataIndex","render","maxWidth","Group","defaultValue","onChange","this","Button","dataSource","width","alignItems","sm","md","lg","onClick","ArrowUpOutlined","ArrowDownOutlined","itemProps","xs","xl","React","Component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2eab0867.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/data.8dacb8e7.csv\";","// TODO: Icon for \"Available Now\", and display near the pic\n\nimport React from \"react\";\nimport { Card, Row, Col } from \"antd\";\nimport {\n  ClockCircleTwoTone,\n  CalendarTwoTone,\n  EnvironmentTwoTone,\n  DollarCircleTwoTone,\n  SlidersTwoTone,\n  AlertTwoTone,\n  WarningTwoTone,\n  PlayCircleTwoTone,\n} from \"@ant-design/icons\";\n\nconst CustomCard = ({\n  url,\n  Name,\n  Price,\n  Location,\n  Size,\n  Time,\n  MonthsInWord,\n  goneNextMonth,\n  newThisMonth,\n  availableNow,\n  SwimmingPattern,\n  ShadowSize,\n}) => (\n  <Card\n    style={{\n      background: \"#fefae3\",\n      margin: \"5px\",\n      borderRadius: \"10px\",\n    }}\n  >\n    <img style={{ display: \"block\", margin: \"0 auto\" }} src={url} alt={Name} />\n    <div className=\"title\">\n      <h3>{Name}</h3>\n    </div>\n    <div className=\"card-desc\">\n      {availableNow && (\n        <Row>\n          <Col span={4}>\n            <AlertTwoTone twoToneColor=\"#71997f\" />\n          </Col>\n          <Col span={20}>\n            <p className=\"desc-text\">Available Now</p>\n          </Col>\n        </Row>\n      )}\n      {Location && (\n        <Row>\n          <Col span={4}>\n            <EnvironmentTwoTone twoToneColor=\"rgb(223, 180, 129)\" />\n          </Col>\n          <Col span={20}>\n            <p className=\"desc-text\">{Location}</p>\n          </Col>\n        </Row>\n      )}\n      <Row>\n        <Col span={4}>\n          <CalendarTwoTone twoToneColor=\"rgb(223, 180, 129)\" />\n        </Col>\n        <Col span={20}>\n          <p className=\"desc-text\">{MonthsInWord}</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={4}>\n          <ClockCircleTwoTone twoToneColor=\"rgb(223, 180, 129)\" />\n        </Col>\n        <Col span={20}>\n          <p className=\"desc-text\">{Time}</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={4}>\n          <DollarCircleTwoTone twoToneColor=\"rgb(223, 180, 129)\" />\n        </Col>\n        <Col span={20}>\n          <p className=\"desc-text\">{Price}</p>\n        </Col>\n      </Row>\n      {Size && (\n        <Row>\n          <Col span={4}>\n            <SlidersTwoTone twoToneColor=\"rgb(223, 180, 129)\" />\n          </Col>\n          <Col span={20}>\n            <p className=\"desc-text\">{Size}</p>\n          </Col>\n        </Row>\n      )}\n      {ShadowSize && (\n        <Row>\n          <Col span={4}>\n            <SlidersTwoTone twoToneColor=\"rgb(223, 180, 129)\" />\n          </Col>\n          <Col span={20}>\n            <p className=\"desc-text\">{ShadowSize}</p>\n          </Col>\n        </Row>\n      )}\n      {SwimmingPattern && (\n        <Row>\n          <Col span={4}>\n            <PlayCircleTwoTone twoToneColor=\"rgb(223, 180, 129)\" />\n          </Col>\n          <Col span={20}>\n            <p className=\"desc-text\">{SwimmingPattern}</p>\n          </Col>\n        </Row>\n      )}\n      {goneNextMonth && (\n        <Row>\n          <Col span={4}>\n            <WarningTwoTone twoToneColor=\"#c09279\" />\n          </Col>\n          <Col span={20}>\n            <p className=\"desc-text\">Gone Next Month</p>\n          </Col>\n        </Row>\n      )}\n      {newThisMonth && (\n        <Row>\n          <Col span={4}>\n            <AlertTwoTone twoToneColor=\"#71997f\" />\n          </Col>\n          <Col span={20}>\n            <p className=\"desc-text\">New This Month</p>\n          </Col>\n        </Row>\n      )}\n    </div>\n  </Card>\n);\n\nexport default CustomCard;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport fishData from \"./data/data.csv\";\nimport { Table, Radio, Row, Col, Button } from \"antd\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\nimport { ArrowDownOutlined, ArrowUpOutlined } from \"@ant-design/icons\";\nimport \"./App.css\";\nimport CustomCard from \"./components/CustomCard\";\nclass App extends React.Component {\n  state = {\n    hemisphere: \"Northern Hemisphere\",\n    columns: [],\n    type: \"Fish\",\n    data: [],\n    dataAggregated: [], // stores aggregated month data\n    viewMode: \"CARD\",\n    sortByPrice: \"DESC\",\n    filterGoneNextMonth: false,\n    filterNewThisMonth: true,\n    showThisMonth: true,\n    showAll: true,\n  };\n\n  componentDidMount() {\n    let df = [];\n    let columns = [];\n\n    // d3.dsv(\"|\", \"https://lihaobhsfer.cn/data.csv\",function (data) {\n    d3.dsv(\"|\", fishData, function (data) {\n      let arr = data[\"Months\"].replace(\"[\", \"\").replace(\"]\", \"\").split(\",\");\n      let newArr = arr.map((i) => {\n        return parseInt(i, 10);\n      });\n\n      data[\"goneNextMonth\"] = false;\n      data[\"newThisMonth\"] = false;\n      let date = new Date();\n      let month = date.getMonth() + 1;\n      let nextMonth = (month % 12) + 1;\n      let prevMonth = month - 1;\n      if (prevMonth === 0) prevMonth = 12;\n\n      if (newArr.indexOf(month) !== -1 && newArr.indexOf(nextMonth) === -1)\n        data[\"goneNextMonth\"] = true;\n      if (newArr.indexOf(prevMonth) === -1 && newArr.indexOf(month) !== -1)\n        data[\"newThisMonth\"] = true;\n\n      data[\"Months\"] = newArr;\n      data[\"MonthsInWord\"] = translateMonth(newArr);\n      data[\"availableNow\"] =\n        checkAvailableNow(data[\"Time\"]) && newArr.indexOf(month) !== -1;\n      data[\"ShadowSize\"] = data[\"Shadow Size\"];\n      data[\"SwimmingPattern\"] = data[\"Swimming Pattern\"];\n\n      df.push(data);\n\n      function checkAvailableNow(timeInWords) {\n        let date = new Date();\n        let currentHour = date.getHours();\n        // console.log(\"current hour is\", currentHour)\n        // console.log(timeInWords)\n        if (timeInWords.toLowerCase() === \"all day\") {\n          // console.log(\"all day\")\n          return true;\n        }\n        let ret = [];\n        if (timeInWords.match(/[0-9]+pm - [0-9]+am/)) {\n          let numbers = timeInWords.match(/[0-9]+/g).map((i) => parseInt(i));\n          // console.log(numbers)\n          for (let j = 0; j <= numbers[1]; j++) ret.push(j);\n          for (let j = numbers[0] + 12; j <= 23; j++) ret.push(j);\n        } else if (timeInWords.match(/[0-9]+am - [0-9]+pm/)) {\n          let numbers = timeInWords.match(/[0-9]+/g).map((i) => parseInt(i));\n          // console.log(numbers)\n          for (let i = numbers[0]; i <= numbers[1] + 12; i++) ret.push(i);\n        } else if (\n          timeInWords.match(/[0-9]+am - [0-9]+am & [0-9]+pm - [0-9]+pm/)\n        ) {\n          let numbers = timeInWords.match(/[0-9]+/g).map((i) => parseInt(i));\n          // console.log(numbers)\n          for (let i = numbers[0]; i <= numbers[1]; i++) ret.push(i);\n          for (let i = numbers[2]; i <= numbers[3]; i++) ret.push(i + 12);\n        }\n        // console.log(ret)\n        return ret.indexOf(currentHour) !== -1;\n      }\n\n      function translateMonth(arr) {\n        if (arr.length === 12) return \"All Year\";\n        else {\n          let res = [];\n          let tmpArr = [];\n          tmpArr.push(arr[0]);\n\n          for (let i = 1; i < arr.length; i++) {\n            if (arr[i] - arr[i - 1] === 1) tmpArr.push(arr[i]);\n            else {\n              res.push(tmpArr);\n              tmpArr = [];\n              tmpArr.push(arr[i]);\n            }\n          }\n          res.push(tmpArr);\n          if (arr.indexOf(1) !== -1 && arr.indexOf(12) !== -1) {\n            let last = res.pop();\n            res[0].unshift(...last.reverse());\n          }\n\n          let ret = \"\";\n          let months = [\n            \"Jan.\",\n            \"Feb.\",\n            \"Mar.\",\n            \"Apr.\",\n            \"May\",\n            \"Jun.\",\n            \"Jul.\",\n            \"Aug.\",\n            \"Sep.\",\n            \"Oct.\",\n            \"Nov.\",\n            \"Dec.\",\n          ];\n          for (let i = 0; i < res.length; i++) {\n            let a = res[i];\n            let length = a.length;\n            if (length === 1) ret = ret + months[a[0] - 1];\n            else ret = ret + months[a[0] - 1] + \"-\" + months[a[length - 1] - 1];\n            if (i !== res.length - 1) ret += \", \";\n          }\n          return ret;\n        }\n      }\n    }).then(() => {\n      let row = df[0];\n      for (const [key] of Object.entries(row)) {\n        if (key === \"Month\" || key.match(\"Hemisphere\")) {\n        } else if (key === \"url\") {\n          columns.push({\n            title: \"Image\",\n            key: \"url\",\n            dataIndex: \"url\",\n            render: (url) => {\n              return <img src={url} alt=\"img\" />;\n            },\n          });\n        } else {\n          columns.push({\n            title: key,\n            dataIndex: key,\n            key: key,\n          });\n        }\n      }\n\n      // filter for hemisphere\n\n      this.setState(\n        {\n          data: df,\n          columns: columns,\n        },\n        () => {\n          this.filterData();\n        }\n      );\n    });\n  }\n\n  filterData = () => {\n    let df = this.state.data;\n    df = df.filter(\n      (i) =>\n        i[\"Hemisphere\"] === this.state.hemisphere &&\n        i[\"Type\"] === this.state.type\n    );\n\n    if (this.state.filterGoneNextMonth)\n      df = df.filter((i) => i[\"goneNextMonth\"] === true);\n    if (this.state.filterNewThisMonth)\n      df = df.filter((i) => i[\"newThisMonth\"] === true);\n\n    let date = new Date();\n    let month = date.getMonth() + 1;\n    if (this.state.showThisMonth)\n      df = df.filter((i) => i[\"Months\"].indexOf(month) !== -1);\n    // Prepare data for this month\n    let names = {};\n    let filteredData = [];\n    // eslint-disable-next-line\n    df.map((i) => {\n      if (!names[i[\"Name\"]]) {\n        names[i[\"Name\"]] = 1;\n        filteredData.push(i);\n      }\n    });\n    console.log(filteredData.length);\n    this.setState(\n      {\n        filteredData: filteredData,\n      },\n      () => {\n        this.sortData();\n      }\n    );\n  };\n\n  sortData = () => {\n    let type = this.state.sortByPrice;\n\n    let df = this.state.filteredData;\n    if (type === \"ASC\")\n      df.sort((a, b) => {\n        parseInt(a.Price.replace(\",\", \"\"), 10) -\n          parseInt(b.Price.replace(\",\", \"\"), 10) ||\n          a.Name.localeCompare(b.Name);\n      });\n    if (type === \"DESC\")\n      df.sort(\n        (a, b) =>\n          parseInt(b.Price.replace(\",\", \"\"), 10) -\n            parseInt(a.Price.replace(\",\", \"\"), 10) ||\n          a.Name.localeCompare(b.Name)\n      );\n    if (type === \"NONE\") df.sort((a, b) => a.Name.localeCompare(b.Name));\n    let dfAvailable = df.filter((a) => a.availableNow);\n    let dfNotAvailable = df.filter((a) => !a.availableNow);\n    df = [...dfAvailable, ...dfNotAvailable];\n    let dfMap = {};\n    df.map((i) => {\n      if (!dfMap[i[\"Location\"]]) {\n        dfMap[i[\"Location\"]] = [];\n      }\n      dfMap[i[\"Location\"]].push(i);\n      return null;\n    });\n    console.log(dfMap);\n    df = [];\n    if (this.state.type == \"Fish\") {\n      if (dfMap[\"Sea\"]) df.push(dfMap[\"Sea\"]);\n      if (dfMap[\"Sea (Raining)\"]) df.push(dfMap[\"Sea (Raining)\"]);\n      if (dfMap[\"Pier\"]) df.push(dfMap[\"Pier\"]);\n      if (dfMap[\"River\"]) df.push(dfMap[\"River\"]);\n      if (dfMap[\"River (Clifftop)\"]) df.push(dfMap[\"River (Clifftop)\"]);\n      if (dfMap[\"River (Clifftop) Pond\"])\n        df.push(dfMap[\"River (Clifftop) Pond\"]);\n      if (dfMap[\"River (Mouth)\"]) df.push(dfMap[\"River (Mouth)\"]);\n      if (dfMap[\"Pond\"]) df.push(dfMap[\"Pond\"]);\n    } else {\n      for (let [key, val] of Object.entries(dfMap)) {\n        console.log(key, val);\n\n        df.push(val);\n      }\n    }\n\n    console.log(df);\n    this.setState({\n      sortedData: df,\n    });\n  };\n\n  onSortButtonClicked = () => {\n    let sortType = this.state.sortByPrice;\n    if (sortType === \"NONE\") sortType = \"ASC\";\n    else if (sortType === \"ASC\") sortType = \"DESC\";\n    else sortType = \"NONE\";\n\n    this.setState(\n      {\n        sortByPrice: sortType,\n      },\n      () => {\n        this.sortData();\n      }\n    );\n  };\n\n  onMonthChange = (e) => {\n    // console.log(e.target.value);\n    this.setState(\n      {\n        month: e.target.value,\n      },\n      () => {\n        this.filterData();\n      }\n    );\n  };\n\n  onHemisphereChange = (e) => {\n    // console.log(e.target.value);\n    this.setState(\n      {\n        hemisphere: e.target.value,\n      },\n      () => {\n        this.filterData();\n      }\n    );\n  };\n\n  onTypeChange = (e) => {\n    console.log(e.target.value);\n    this.setState(\n      {\n        type: e.target.value,\n      },\n      () => {\n        this.filterData();\n      }\n    );\n  };\n  onFilterGoneNextMonthButtonClicked = () => {\n    let filterStuff = this.state.filterGoneNextMonth;\n    this.setState(\n      {\n        filterGoneNextMonth: !filterStuff,\n      },\n      () => {\n        this.filterData();\n      }\n    );\n  };\n\n  onFilterGNewThisMonthButtonClicked = () => {\n    let filterStuff = this.state.filterNewThisMonth;\n    this.setState(\n      {\n        filterNewThisMonth: !filterStuff,\n      },\n      () => {\n        this.filterData();\n      }\n    );\n  };\n\n  onShowThisMonthClicked = () => {\n    let filterStuff = this.state.showThisMonth;\n    this.setState(\n      {\n        showThisMonth: !filterStuff,\n      },\n      () => {\n        this.filterData();\n      }\n    );\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div style={{ maxWidth: \"1200px\", margin: \"0 auto\" }}>\n          <h1 className=\"page-title\">Animal Crossing Catch Guide</h1>\n          <Row>\n            <Radio.Group\n              className=\"radio-select\"\n              defaultValue=\"Northern Hemisphere\"\n              onChange={this.onHemisphereChange}\n            >\n              <Radio.Button value=\"Northern Hemisphere\">\n                Northern Hemisphere\n              </Radio.Button>\n              <Radio.Button value=\"Southern Hemisphere\">\n                Southern Hemisphere\n              </Radio.Button>\n            </Radio.Group>\n          </Row>\n          <Row>\n            <Radio.Group\n              className=\"radio-select\"\n              defaultValue=\"Fish\"\n              onChange={this.onTypeChange}\n            >\n              <Radio.Button value=\"Fish\">Fish</Radio.Button>\n              <Radio.Button value=\"Bug\">Bugs</Radio.Button>\n              <Radio.Button value=\"Deep Sea Creature\">\n                Deep Sea Creatures\n              </Radio.Button>\n            </Radio.Group>\n          </Row>\n\n          {/* Table, view mode is \"LIST\" */}\n          {this.state.viewMode === \"LIST\" &&\n            this.state.data &&\n            this.state.data.length > 0 && (\n              <Table\n                columns={this.state.columns}\n                dataSource={this.state.filteredData}\n              />\n            )}\n          {this.state.viewMode === \"CARD\" &&\n            this.state.data &&\n            this.state.data.length > 0 && (\n              <div style={{ width: \"100%\" }}>\n                <Row style={{ display: \"flex\", alignItems: \"center\" }}>\n                  <Col sm={12} md={6} lg={4}>\n                    <Button\n                      className={\n                        this.state.showThisMonth\n                          ? \"button-filter-checked\"\n                          : \"button-filter\"\n                      }\n                      onClick={this.onShowThisMonthClicked}\n                    >\n                      Available This Month\n                    </Button>\n                  </Col>\n                  <Col>\n                    <Button\n                      className=\"button-select\"\n                      onClick={this.onSortButtonClicked}\n                    >\n                      Price{\" \"}\n                      {this.state.sortByPrice === \"NONE\" ? (\n                        \"\"\n                      ) : this.state.sortByPrice === \"ASC\" ? (\n                        <ArrowUpOutlined />\n                      ) : (\n                        <ArrowDownOutlined />\n                      )}\n                    </Button>\n                  </Col>\n                  <Col>\n                    <Button\n                      className={\n                        this.state.filterGoneNextMonth\n                          ? \"button-filter-checked\"\n                          : \"button-filter\"\n                      }\n                      onClick={this.onFilterGoneNextMonthButtonClicked}\n                    >\n                      Gone Next Month\n                    </Button>\n                  </Col>\n                  <Col>\n                    <Button\n                      className={\n                        this.state.filterNewThisMonth\n                          ? \"button-filter-checked\"\n                          : \"button-filter\"\n                      }\n                      onClick={this.onFilterGNewThisMonthButtonClicked}\n                    >\n                      New This Month\n                    </Button>\n                  </Col>\n                </Row>\n\n                <Row style={{ margin: \"5px\" }}>\n                  {this.state.sortedData &&\n                    this.state.sortedData.map((arr) => (\n                      <Row style={{ width: \"100%\" }}>\n                        <Row style={{ width: \"100%\" }}>\n                          <h2>{arr && arr[0] && arr[0].Location}</h2>\n                        </Row>\n                        <Row style={{ width: \"100%\" }}>\n                          {arr.map(({ ...itemProps }) => (\n                            <Col xs={12} sm={8} md={6} lg={4} xl={4}>\n                              <CustomCard {...itemProps} />\n                            </Col>\n                          ))}\n                        </Row>\n                      </Row>\n                    ))}\n                </Row>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}